{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 TimesNewRomanPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
{\*\listtable
{\list\listtemplateid1\listhybrid
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\f1\fs28\b0\i0\fi-360\li720\lin720}{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \fi360\ltrch\loch {\f1\fs28\b0\i0 There are a number of paths available to programmers who decide to write UIs with F#:}
\par\plain \f1\fs28\b0\i0
\par\pard\plain \tx240\tx720\li720\fi-720\ltrch\loch \ls1\ilvl0{\listtext\f1\fs28\b0\i0	1.	}{\f1\fs28\b0\i0 Avalonia.FuncUI (Cross-Platform)}
\par\plain \ilvl0{\listtext\f1\fs28\b0\i0	2.	}{\f1\fs28\b0\i0 Elmish.WPF (Windows Only)}
\par\plain \ilvl0{\listtext\f1\fs28\b0\i0	3.	}{\f1\fs28\b0\i0 Use Windows Forms or WPF directly (Windows Only)}
\par\pard\plain \fi360\ltrch\loch {\f1\fs28\b0\i0 \line If you want to be cross-platform then option 1 is your best bet. Avalonia.FuncUI is fairly intuitive to use and will suit your purposes admirably, but at the time of writing (March 26}{\f1\fs28\b0\i0\super th }{\f1\fs28\b0\i0 2021) the documentation is so-so. So unless you like searching the web for answers and asking questions on Stack Exchange I don't recommend this route. Instead wait for 6 months and come back to Avalonia.FuncUI if you still need to write UIs in F#\hich\f1 \emdash \loch\f1 the documentation will have improved by then.}
\par\plain {\f1\fs28\b0\i0 Option 2, the Elmish.WPF route, is a Windows only route. It is a battle-tested UI framework with good documentation. It uses the model/view/update (MVU) pattern in its implementation. We will talk about the MVU pattern shortly.}
\par\plain {\f1\fs28\b0\i0 Option 3 is also available for those who want to use their prior knowledge on Windows Forms or WPF directly in their apps on Windows. This is the route (with WPF) that we will take in this book as more readers will be aware of WPF than Avalonia.FuncUI or Elmish.WPF.}
\par\plain {\f1\fs28\b0\i0 You can find out more information about the three options available at }{\f0\fs28\b0\i0 http://fsharp.org/use/desktop-apps/}{\f1\fs28\b0\i0 . Since we are going to be using WPF directly on Windows read this excellent article also to get started with WPF using F#: }{\f0\fs28\b0\i0 https://www.c-sharpcorner.com/article/create-wpf-application-with-f-sharp-and-fsxaml/.}}