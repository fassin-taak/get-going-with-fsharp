{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 TimesNewRomanPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \fi360\ql\ltrch\loch {\f1\fs28\b0\i0 F# is a functional-first programming language. That is, F# is a programming language which emphasizes the functional aspect of programming to a greater extent than other languages you may be familiar with such as C#, Visual Basic .NET, Python and JavaScript. You will already be quite familiar with functions: you met them in high school when you drew a plot of the function, }\vertalc {\*\shppict{\pict{\*\nisusfilename square x}{\*\mathmlequation <mrow>\'0A  <mi>y</mi>\'0A  <mo>=</mo>\'0A  <msup>\'0A    <mi>x</mi><mn>2</mn>\'0A  </msup>\'0A</mrow>}\picw446\pich50\picwgoal6690\pichgoal750\pngblip 89504e470d0a1a0a0000000d49484452000001be0000003208060000002388befe0000000473424954080808087c086488000000097048597300000ec400000ec401952b0e1b000001b349444154789ceddd318a53511480e11f05ade20ab4d2263bb0b5c846c442b088ae401720da8fba02b1b1b3b0750703b68a0b502b3b2d924732194707e39b87e3f74148783c726e7772eeb9e7a500000000000000000000000000000000000000000000000000000000e06c5caade56dfab2fd5b569970300e3ba5bdd5a7f3ea80eab2bd32d0700cecebcfa98aa0f4ee5c2d40b00f6f6a9fa3af522e05f7171ea05007bbbdeea47eceba91702c0f974d0ea50c9b7367db6aa65c77b6dc3bdbf7abd3921ce62eb9e3beb6bf3eaf34e9cfbe9ef0130b259f5a17aba756dac5edb7078e566f5aea3496ed9262902c068867182ed6a6d563d1f21d650f9ed5693cb368977563d18213600543f4f7cb73b5eededb3d53918aacbedca6ef77b77b75d01e0afdb9e9f9b578f468a3324bedf2548e0148c33c09f3b5cbf5faeee554f468af3b07ad9aac767560ff624f1c17eae56cfaa578d334bb7a8de572f5a6d67dea81e2701023081e1d0c918a72a971dedff6d3f9bd3294e0026b1481202e03f316fd5770380736bd1c983e40070ee0c7d377f0104000000000000000000000000000000000000000000000000000000000030961f7e3a51671d384f2c0000000049454e44ae426082}}{\f1\fs28\b0\i0  using your trusty Sharp EL 9300 graphing calculator or your favorite plotting program on the WWW (e.g. Desmos at https://desmos.com/calculator). Functions as opposed to objects are the first-class citizens of functional programming languages like F#. They allow one to think about and solve problems using features prominent in functional programming such as immutability, pipelining, partial application, type-inference, and strong typing. (Note that these features are not unique to F#, they exist in other functional programming languages, and indeed in ordinary imperative programming languages such as C#, Visual Basic .NET, Python and JavaScript).}
\par\plain {\f1\fs28\b0\i0 F# was created by Don Syme who is an Australian Computer Scientist and Principal Researcher at Microsoft Research, Cambridge, UK. He is still very active in the F# community and makes contributions to the F# language to this day (March 24}{\f1\fs28\b0\i0\super th}{\f1\fs28\b0\i0  2021). You could call him the Grandfather of F# or the Supreme Leader of the F# community.}
\par\plain {\f1\fs28\b0\i0 F# allows one to think about a particular programming problem or task in a clean and simple way. It has the clean simplicity of Python while retaining the performance and type safety found in languages such as C++ and C#. F# can be used to write small programs with specific goals set at the start to large systems with open-ended goals.}
\par\plain {\f1\fs28\b0\i0 F# is fully open source and fully cross-platform. F# is integrated within Visual Studio and so can make full use of all the integrated development environment\loch\af1\hich\af1\dbch\af1\uc1\u8217\'92s (IDE\u8217\'92s) features such as Intellisense, package management, documentation browser, etc. Alternatively, The Visual F# Tools can be downloaded from https://github.com/Microsoft/visualfsharp to develop F# programs without an IDE. On top of that, F# code can be run in Jupyter Notebooks hosted on Microsoft Azure Services.}
\par\plain {\f1\fs28\b0\i0 I also use Visual Studio Code sometimes because it is cross-platform and has about a million different extensions from Markdown editing support to copy code/text with line numbers and everything else you can think of in-between.}
\par\plain \f1\fs28\b0\i0
\par\plain \f1\fs28\b0\i0
\par\plain \f1\fs28\b0\i0
\par\plain \f1\fs28\b0\i0
\par\plain \f1\fs28\b0\i0
\par\plain \f1\fs28\b0\i0
\par\plain \f1\fs28\b0\i0}