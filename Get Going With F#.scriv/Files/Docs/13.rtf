{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 TimesNewRomanPS-BoldMT;}{\f2\fmodern\fcharset0\fprq2 TimesNewRomanPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
{\*\listtable
{\list\listtemplateid1\listhybrid
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\f2\fs28\b0\i0\fi-360\li720\lin720}{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \fi360\ltrch\loch {\f1\fs28\b1\i0 In this chapter we will be using .NET 4.8 because using the latest 5.0 version of .NET causes compilation errors.}
\par\plain {\f2\fs28\b0\i0 There are a number of paths available to programmers who decide to write UIs with F#:}
\par\plain \f2\fs28\b0\i0
\par\pard\plain \tx240\tx720\li720\fi-720\ltrch\loch \ls1\ilvl0{\listtext\f2\fs28\b0\i0	1.	}{\f2\fs28\b0\i0 Avalonia.FuncUI (Cross-Platform)}
\par\plain \ilvl0{\listtext\f2\fs28\b0\i0	2.	}{\f2\fs28\b0\i0 Elmish.WPF (Windows Only)}
\par\plain \ilvl0{\listtext\f2\fs28\b0\i0	3.	}{\f2\fs28\b0\i0 Use Windows Forms or WPF directly (Windows Only)}
\par\pard\plain \fi360\ltrch\loch {\f2\fs28\b0\i0 \line We will take option 2, the Elmish.WPF route, even though it is a Windows only route because it is a battle-tested UI framework with excellent documentation. If you want to be cross-platform then option 1, Avalonia.FuncUI is fairly intuitive to use and will suit your purposes admirably, but at the time of writing (March 26}{\f2\fs28\b0\i0\super th }{\f2\fs28\b0\i0 2021) the documentation is so-so. So unless you like searching the web for answers and asking questions on Stack Exchange I don't recommend this route. Instead wait for 6 months and come back to Avalonia.FuncUI if you still need to write UIs in F# \hich\f2 \emdash \loch\f2  the documentation will have improved by then. Option 3 is also available for those who must use Windows Forms or WPF directly in their apps.}
\par\plain {\f2\fs28\b0\i0 You can find out more information about the three options available at }{\f0\fs28\b0\i0 http://fsharp.org/use/desktop-apps/}{\f2\fs28\b0\i0 . Since we are going to be using Elmish.WPF read}{\f0\fs28\b0\i0  https://github.com/elmish/Elmish.WPF#getting-started-with-elmishwpf}{\f2\fs28\b0\i0  first and then come back here.}}