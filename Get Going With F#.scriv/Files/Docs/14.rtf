{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fnil\fcharset0\fprq2 TimesNewRomanPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \fi360\ltrch\loch {\f1\fs28\b0\i0 Let's modify the code to display an image. The image will be a red circle on a blue background. The image will also be programmatically generated. We will use the }{\f0\fs28\b0\i0 WriteableBitmap}{\f1\fs28\b0\i0  class residing inside the }{\f0\fs28\b0\i0 Avalonia.Media.Imaging}{\f1\fs28\b0\i0  namespace. Let's use a bitmap of size 1024 x 1024 which we will initialize inside the I}{\f0\fs28\b0\i0 nit}{\f1\fs28\b0\i0  function of the }{\f0\fs28\b0\i0 Fractals }{\f1\fs28\b0\i0 module. The code is:}
\par\plain \f0\fs28\b0\i0
\par\plain {\f0\fs28\b0\i0 15:     /// Initializes the fractal type.}
\par\plain {\f0\fs28\b0\i0 16:     let Init = \{}
\par\plain {\f0\fs28\b0\i0 17:       ft = Julia}
\par\plain {\f0\fs28\b0\i0 18:       bmp = new WriteableBitmap(size = Avalonia.PixelSize(1024, 1024),}
\par\plain {\f0\fs28\b0\i0 19:                             dpi = Avalonia.Vector(72.0, 72.0))}
\par\plain {\f0\fs28\b0\i0 20:     \}}
\par\plain {\f0\fs28\b0\i0 \line }{\f1\fs28\b0\i0 Let's add a function to draw to the bitmap a red circle on a blue background.}}